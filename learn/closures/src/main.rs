fn main() {
    let x = 5;
    let y = 10;
    let adder = |a| a + x + y;
    println!("The sum of x, y and 10 is {}", adder(10));
}

// 函数和闭包的区别是什么？
// 闭包是一个匿名函数，但是闭包可以捕获上下文中的变量，而函数不可以。
// 闭包的类型是一个结构体，而函数的类型是一个函数指针。

// 为什么函数不可以
// 函数是一个独立的代码块，函数的参数和返回值都是通过栈来传递的，函数的参数和返回值都是在栈上分配内存的。

// 那为什么闭包可以
// 闭包是一个匿名函数，闭包的参数和返回值都是通过堆来传递的，闭包的参数和返回值都是在堆上分配内存的。

// 闭包的作用是什么？
// 闭包可以捕获上下文中的变量，这样就可以在闭包中使用外部的变量，而不需要将变量作为参数传递给闭包。

// 闭包的原理是什么？
// 闭包的原理是将闭包转换为一个结构体，结构体中包含了闭包中使用的变量，然后将结构体的实例作为参数传递给函数。

// 函数的原理呢？
// 函数的原理是将函数转换为一个函数指针，然后将函数指针作为参数传递给函数。